install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
data(package="statsr")
data(package="statsr")
.libPaths(C:\Users\Constance\AppData\Local\Temp\RtmpANvIzW\downloaded_packages)
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy_targeted/")
require(rmarkdown)
require(knitr)
require(ggplot2)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy_targeted/")
# Add packages used in knitting this document here:
require(rmarkdown)
require(knitr)
require(ggplot2)
require(dplyr)
require(vegan)
require(ape)
# Update this first path to be the root directory for this project on your computer
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy_targeted/")
#opts_knit$set(root.dir = "/Users/Constance/Documents/GitHub/dietstudy_targeted/")
# This creates a figure directory in the same directory where this .Rmd document is located
# No need to change this code unless you want figures in different formats
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
# load the map example:
map <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# Add packages used in knitting this document here:
require(rmarkdown)
require(knitr)
require(ggplot2)
require(dplyr)
require(vegan)
require(ape)
# Update this first path to be the root directory for this project on your computer
#opts_knit$set(root.dir = "/Users/Abby/Documents/Projects/dietstudy_targeted/")
opts_knit$set(root.dir = "//jenshiow-pc/Users/Constance/Documents/GitHub/dietstudy_targeted")
# This creates a figure directory in the same directory where this .Rmd document is located
# No need to change this code unless you want figures in different formats
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
# Import the beta diversity table from grains_beta (weighted or unweighted)
food_beta <- read.table()
food_beta <- read.table()
read.table()
# load the map example:
map <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# load the fiber data
fiber <- read.table("data/grains_data/fiber.smry.otu.txt", sep = "\t", header = T, comment = "", stringsAsFactors = F)
#fiber <- fiber %>% select(-X.FoodID)
# remove soylents
fiber <- fiber %>% select(-c(MCTs11, MCTs12))
# remove bad data person
fiber <- fiber %>% select(-c(MCTs05))
# Do a little normalization
# Find and get median colsums
median_col <- median(colSums(fiber[,2:32]))
# Normalize and multiply by median_col
fiber[,2:32] <- sweep(fiber[,2:32], 2, colSums(fiber[,2:32]), "/")
fiber[,2:32] <- ceiling(fiber[,2:32] * median_col)
# Subset fiber to grains
grains <- fiber %>% slice(grep("L1_Grain", fiber$taxonomy))
# remove any grains with rowsums = 0
keep <- rowSums(grains[,2:32])>0
grains <- grains %>% filter(keep)
# export for use with QIIME
# Need X.FoodID column to be first column
# Need taxonomy to be last column
# Need X.FoodID to be "#FoodID" needs a # to work with QIIME
colnames(grains)[1] <- "#FoodID"
write.table(grains, "data/grains_data/grains_fiber.txt", sep = "\t", row.names = F, quote = F)
# Import the beta diversity table from grains_beta (weighted or unweighted)
food_beta <- read.table(choose.file())
# Import the beta diversity table from grains_beta (weighted or unweighted)
food_beta <- read.table(file.choose())
# refer this code to make a pcoa you will have to fix naming and play with the data structure of the dataframe called plot to get this to work.
#betad as matrix
plot <- data.frame(pcoa(food_beta)$vectors)
# move rownames to a column
plot <- rownames_to_column(plot, var = "X.SampleID")
View(plot)
View(grains)
pxd
pwd()
getwd
getwd()
setwd("~/GitHub/dietstudy_targeted/analysis/grains")
setwd("~/GitHub/dietstudy_targeted")
setwd("~/GitHub/dietstudy_targeted/analysis/grains")
# this chunck sets up the rmd document
require(rmarkdown)
require(knitr)
require(tidyverse)
require(RColorBrewer)
require(cowplot)
require(reshape2)
require(vegan)
# set the path for root directory
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/MAGIC/")
# create a directory for the figure and set it's resolution/format
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
pal <- c("#ff0000", "#ffd940", "#008c4b", "#00138c", "#8c235b", "#ffbfbf", "#8c7723", "#468c75", "#8091ff", "#ff80c4", "#8c3123", "#fff2bf", "#40fff2", "#69698c", "#ff0044", "#ff9180", "#e5ff80", "#bffbff", "#5940ff", "#8c696e", "#8c7369", "#858c69", "#40d9ff", "#c480ff", "#ff8c40", "#4b8c00", "#23698c", "#69238c", "#8c4b00", "#bfffbf", "#004b8c", "#eabfff", "#ffc480", "#40ff59", "#80c4ff", "#ff40f2")
# load raw taxa file from BURST
taxa <- read.table("data/processed_tax/taxonomy_norm_s.txt", header = T, row.names = 1, sep = "\t", comment = "")
map <- read.delim("data/map/temp_map.tsv", sep = "\t", row.names = 1)
map <- map[rownames(map) %in% colnames(taxa) ,]
map <- rownames_to_column(map, var = "X.SampleID")
# for plotting, limit to top ~20 bugs
taxa = taxa[rowMeans(taxa) >= 0.01,]
# fix labeling for plotting
rownames(taxa) <- gsub("?.*s__", "", rownames(taxa))
rownames(taxa) <- gsub("?.*g__", "Genus ", rownames(taxa))
rownames(taxa) <- gsub("?.*o__", "Order ", rownames(taxa))
rownames(taxa) <- gsub("?.*f__", "Family ", rownames(taxa))
rownames(taxa) <- gsub(";NA", "", rownames(taxa))
rownames(taxa) <- gsub("\\[", "", rownames(taxa))
rownames(taxa) <- gsub("\\]", "", rownames(taxa))
#readjust for plotting
taxa = sweep(sqrt(taxa),2,colSums(sqrt(taxa)),'/')
# sort by highest average relative abundance
taxa <- taxa[order(rowMeans(taxa), decreasing = T),]
plot <- as.data.frame(t(taxa))
plot <- rownames_to_column(plot, var = "X.SampleID")
plot <- melt(plot, id = "X.SampleID", variable.name = "Species")
# combine all "<x% abundance" foods into one for plotting
plot <- plot %>% group_by(X.SampleID, Species) %>% dplyr::summarise(newvalue = sum(value))
# add patient id to mapping
plot <- merge(plot, map)
# get right number of colors for plotting
no_cols <- length(unique(plot$Species))
colors_micro <-pal[1:no_cols]
ggplot(data = plot, aes(x=X.SampleID, y = newvalue, fill=Species)) +
geom_bar(stat = "identity") +
facet_grid(.~Patient_No, scales = "free_x", space = "free_x") +
scale_x_discrete(drop = FALSE) +
scale_fill_manual(values = colors_micro) +
theme_classic() +
theme(strip.text.x = element_text(angle = 0, size = 4, face = "italic"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.04, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 5)) +
nrow = 5)) + # for full page
ylab("sqrt(Taxonomy Abundance)\n")
