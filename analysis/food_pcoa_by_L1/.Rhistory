library(knitr)
library(plyr)
library(dplyr)
library(tidyr)
library(tibble)
library(reshape2)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library(cowplot)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/HFD Mouse Fungal/")
opts_chunk$set(echo = TRUE, fig.path='Manuscript_figs_final/', dev = c("png", "pdf"), dpi = 300)
### load the ninja fungal table from Embalmer
fungal_tax <- read.delim("raw data/Best fungal/fung195_combinedbymouse.tax", row = 1)
### summarize taxa at species level ###
# split <- strsplit(rownames(fungal_tax), ";")
# taxaStrings <- sapply(split, function(x) paste(x[1:7], collapse=";")) # 7 is species level (max)
# fungal_tax <- rowsum(fungal_tax, taxaStrings)
# move rownames to column called X.OTUID
fungal_tax <- rownames_to_column(fungal_tax, var = "X.OTUID")
# make taxonomy table phyloseq object
tax <- as.data.frame(fungal_tax$X.OTUID)
rownames(tax) <- paste0("OTU", 1:nrow(tax))
colnames(tax) = "taxa"
tax <- as.matrix(tax)
tax <- tax_table(tax)
# rename rownames (OTU1:OTUnrow)
fungal_tax <- remove_rownames(fungal_tax)
fungal_tax <- column_to_rownames(fungal_tax, "X.OTUID")
rownames(fungal_tax) <- paste0("OTU", 1:nrow(fungal_tax))
# make otus a phyloseq object
fungal_tax <- otu_table(fungal_tax, taxa_are_rows = TRUE)
# load mapping data
fungal_map <- read.table("raw data/mapping/ITS/fungal_map_merged.txt",
sep = "\t",
header = TRUE,
comment.char = "",
row.names = 1)
# transfrom map to phyloseq sample data
fungal_map_seq <- sample_data(fungal_map)
# make phyloseq object
fungal_tax <- merge_phyloseq(fungal_tax, fungal_map_seq, tax)
# limit to just the wildtype mice
fungal_tax <- subset_samples(fungal_tax, Genotype == "Wildtype")
# view the summary data about the ninja funal phyloseq object
# fungal_tax
# rename the sample names so that we can use the corresponding names with micorbiome
sample_names(fungal_tax) <- sample_data(fungal_tax)$Individual_ID
# we don't really need this for this analysis (just in case)
# load the ninja microbe table (note contains the taxonomy)
ninja_microbe <- import_biom("raw data/Original OTU tables/16S/otutable_rare90851.biom")
# load the map
microbe_map <- read.table("raw data/mapping/16S/map_all.txt",
header = TRUE,
sep = "\t",
comment.char = "",
row.names = 1)
# transfrom map to phyloseq sample data
microbe_map_seq <- sample_data(microbe_map)
# make phyloseq object
ninja_microbe <- merge_phyloseq(ninja_microbe, microbe_map_seq)
# rename the taxonomy ranks so they are meaningful
colnames(tax_table(ninja_microbe)) <- c("Kingdom","Phylum", "Class", "Order", "Family", "Genus", "Species" )
# limit to just the wildtype mice
ninja_microbe <- subset_samples(ninja_microbe, Genotype == "Wildtype")
# view summary data about microbe samples
#ninja_microbe
# rename the samples so they match the fungal data
sample_names(ninja_microbe) <- sample_data(ninja_microbe)$Individual_ID
# these were created using bugbase
# run.bugbase.r -v -i Data/otutable_rare90851.biom -c Diet -m Data/wt_map.txt -o Output/All_Kegg -x -k -p <your kegg pathways of interest>
kegg_predictions <- read.table("../HFD Mouse Fungal/Output/Bugbase/BugBase_All_Kegg/predicted_phenotypes/predictions.txt",
header = TRUE,
sep = "\t",
stringsAsFactors = FALSE)
# create key between the microbe sample names and the individual ID and limit to the wildtype samples
key = rownames_to_column(microbe_map) %>%
filter(Genotype == "Wildtype") %>%
select(rowname, Individual_ID, Diet)
# match the key with the exisiting sample identifier
kegg_predictions <- inner_join(key, kegg_predictions, by = c("rowname" = "X"))
# remove the original sample identifier
kegg_predictions <- kegg_predictions %>% select(-rowname)
# calculate mean predicted value by diet group
mean_rel_abund <- kegg_predictions %>%
group_by(Diet) %>%
summarise_each(funs(mean), vars = -c(Individual_ID, Diet))
