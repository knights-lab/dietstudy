final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- abs(final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.25]
sigs <- sigs[order(sigs)]
sigs
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
subgroup <- subgroup[2,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
#tmp <- as.data.frame(rowMeans(taxsub))
tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- abs(final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
change <- (final-baseline)
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
#tmp <- as.data.frame(rowMeans(taxsub))
tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
plot.baseline <- baseline[rownames(baseline) %in% names(sigs),]
plot.baseline.t <- as.data.frame(t(plot.baseline))
plot.baseline.t$timepoint <- "baseline"
plot.baseline.t <- rownames_to_column(plot.baseline.t, var = "UserName")
plot.final <- final[rownames(final) %in% names(sigs),]
plot.final.t <- as.data.frame(t(plot.final))
plot.final.t$timepoint <- "final"
plot.final.t <- rownames_to_column(plot.final.t, var = "UserName")
plot <- rbind(plot.final.t, plot.baseline.t)
plot <- inner_join(plot, tax_smry_map)
names(sigs) <- gsub(".*s__", "", names(sigs))
colnames(plot) <- gsub(".*s__", "", colnames(plot))
names(sigs) <- gsub("]", "", names(sigs))
colnames(plot) <- gsub("]", "", colnames(plot))
names(sigs) <- gsub("\\[", "", names(sigs))
colnames(plot) <- gsub("\\[", "", colnames(plot))
for (i in names(sigs)) {
print(ggplot(plot, aes_string(x = "timepoint", y = i, color = "Supplement")) +
geom_point() +
geom_smooth(aes(group = Supplement), size = 2, method = "lm", se = FALSE)
)
}
View(map_username)
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
View(tax_smry_map)
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity == "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
change <- (final-baseline)
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
#subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
#subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
#subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
tmp <- as.data.frame(rowMeans(taxsub))
#tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# drop people of non-white ethnicity
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity == "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:17], x[18:34], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
base.final <- cbind(baseline,final)
View(base.final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
View(base.final.mct)
View(basel.final.evoo)
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
#subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
#subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
#subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
tmp <- as.data.frame(rowMeans(taxsub))
#tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# drop people of non-white ethnicity
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity != "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
View(base.final.mct)
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:3], x[4:6], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:3], x[4:6], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
qvals.evoo[qvals.evoo <=0.25] # no
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
pvals.change$p.value < 0.25
pvals.change[p.value < 0.25]
pvals.change[pvals.change$p.value < 0.25]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
qvals.change <- p.adjust(pvals.change, method = "fdr")
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
pvals.change$`k__Bacteria;p__Bacteroidetes;c__Bacteroidia;o__Bacteroidales;f__Rikenellaceae;g__Alistipes;s__Alistipes_obesi`
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
#subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
#subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
#subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
tmp <- as.data.frame(rowMeans(taxsub))
#tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# drop people of non-white ethnicity
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity == "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
qvals.change[qvals.change <= 0.25] # no
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
#subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 12,]
#subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
#subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
tmp <- as.data.frame(rowMeans(taxsub))
#tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# drop people of non-white ethnicity
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity == "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:28], x[29:56], paired = TRUE)$p.value})
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:27], x[28:56], paired = TRUE)$p.value})
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:28], x[29:56], paired = TRUE)$p.value})
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
qvals.change[qvals.change <= 0.25] # no
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)})
qvals.change <- p.adjust(pvals.change, method = "fdr")
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
# clr taxonomy
tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
# import matching map
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# Average microbiome for first days (pre supplementation)
baseline <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(baseline) <- rownames(tax)
#loop through and average first 3 days
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo <=7,]
subgroup <- subgroup[1:3,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
tmp <- as.data.frame(rowMeans(taxsub))
colnames(tmp) <- i
baseline <- cbind(baseline,tmp)
}
# Microboime for last day we have
final <- data.frame(matrix(nrow=nrow(tax), ncol=0))
rownames(final) <- rownames(tax)
#loop through and take the last day we have for each person
for (i in unique(tax_map$UserName)){
subgroup <- tax_map[tax_map$UserName == i,]
subgroup <- subgroup[subgroup$StudyDayNo >= 10,]
subgroup <- subgroup[order(subgroup$StudyDayNo, decreasing = TRUE),]
subgroup <- subgroup[1,]
taxsub <- tax[,colnames(tax) %in% subgroup$X.SampleID]
# if (dim(subgroup)[1] == 1) {
#   tmp <- as.data.frame(taxsub)
# } else
#tmp <- as.data.frame(rowMeans(taxsub))
tmp <- as.data.frame(taxsub)
colnames(tmp) <- i
final <- cbind(final,tmp)
}
# create map that containes just these subjects, in this order
tax_smry_map <- map_username[map_username$UserName %in% colnames(baseline),]
# drop people of non-white ethnicity
tax_smry_map <- tax_smry_map[tax_smry_map$Race.Ethnicity == "White",]
baseline <- baseline[,colnames(baseline) %in% tax_smry_map$UserName]
final <- final[,colnames(final) %in% tax_smry_map$UserName]
# calculate the difference between baseline and final - should really do this seperately as counts, then convert to clr.
change <- (final-baseline)
# or do each seperately
base.final <- cbind(baseline,final)
base.final.mct <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "MCT"]]
basel.final.evoo <- base.final[,colnames(base.final) %in% tax_smry_map$UserName[tax_smry_map$Supplement == "EVOO"]]
# Change by supplement
pvals.change <- apply(change, 1, function(x) {t.test(x ~ tax_smry_map$Supplement)$p.value})
qvals.change <- p.adjust(pvals.change, method = "fdr")
qvals.change[qvals.change <= 0.25] # no
# in the mct group are there any species differences between pre and post?
pvals.mct <- apply(base.final.mct, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.mct <- p.adjust(pvals.mct, method = "fdr")
qvals.mct[qvals.mct <=0.25] # yes
# in the evoo group are there any species differences between pre and post?
pvals.evoo <- apply(basel.final.evoo, 1, function(x) {t.test(x[1:14], x[15:28], paired = TRUE)$p.value})
qvals.evoo <- p.adjust(pvals.evoo, method = "fdr")
qvals.evoo[qvals.evoo <=0.25] # no
sigs <- qvals.evoo[qvals.evoo <=0.15]
sigs <- sigs[order(sigs)]
sigs
# regardless of method used, we get the same outcome
