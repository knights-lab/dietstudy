tmp <- c(i, j, cor(a, b, method = "spearman"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stingsAsFactors = F)
colnames(cors) <- c("food", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.character(cors$pvalue)
cors$pvalue <- as.numeric(cors$pvalue)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
cors <- cors[cors$qvalue <= 0.5,]
cors$food <- gsub(".*L2_", "", cors$food)
cors[1:10,]
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
cors[cors$qvalue <=0.25,]
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_g.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:10]
food_vectors_w <- food_vectors_w[,1:10]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
cors[cors$qvalue <=0.25,]
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
cors[cors$qvalue <=0.25,]
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_g.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
cors[cors$qvalue <=0.25,]
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_f.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
cors[cors$qvalue <=0.25,]
View(cors)
sigs <- cors[cors$qvalue <=0.25,]
View(sigs)
food <- read.delim("data/processed_food/dhydrt.smry.no.soy.txt", sep = "\t", header = T, comment = "", row.names = "taxonomy")
food <- food[,!colnames(food) == "X.FoodID"]
# collapse at L1
split <- strsplit(rownames(food),";")
# Species
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food_L <- rowsum(food,foodStrings)
food_L_t <- as.data.frame(t(food_L))
cors <- NULL
for (i in colnames(food_L_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(food_L_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "spearman"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stingsAsFactors = F)
colnames(cors) <- c("food", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.character(cors$pvalue)
cors$pvalue <- as.numeric(cors$pvalue)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
cors <- cors[cors$qvalue <= 0.5,]
cors$food <- gsub(".*L2_", "", cors$food)
cors[1:10,]
cors <- NULL
for (i in colnames(food_L_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(food_L_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "spearman"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stingsAsFactors = F)
colnames(cors) <- c("food", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.character(cors$pvalue)
cors$pvalue <- as.numeric(cors$pvalue)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
cors <- cors[cors$qvalue <= 0.5,]
cors$food <- gsub(".*L2_", "", cors$food)
cors[1:10,]
food_v_axis <- cors[cors$qvalue <=0.25,]
View(food_v_axis)
require(rmarkdown)
require(knitr)
require(RColorBrewer)
require(cowplot)
require(tidyverse)
require(stringr)
require(dplyr)
require(ape)
require(vegan)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# set up colors
cols <- brewer.pal(11, "Spectral")
cols2 <- colorRampPalette(cols)
my_cols <- (cols2(10))
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_f.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
tax_v_axis <- cors[cors$qvalue <=0.25,]
View(tax_v_axis)
tax_v_axis[1,1]
tax_v_axis["tmp.2"]
tax_v_axis["tmp.2",]
tax_v_axis["tmp.7",]
food_v_axis <- sort(food_v_axis$food_vector)
?order()
food_v_axis <- cors[cors$qvalue <=0.25,]
require(rmarkdown)
require(knitr)
require(RColorBrewer)
require(cowplot)
require(tidyverse)
require(stringr)
require(dplyr)
require(ape)
require(vegan)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# set up colors
cols <- brewer.pal(11, "Spectral")
cols2 <- colorRampPalette(cols)
my_cols <- (cols2(10))
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_f.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
tax_v_axis <- cors[cors$qvalue <=0.25,]
food <- read.delim("data/processed_food/dhydrt.smry.no.soy.txt", sep = "\t", header = T, comment = "", row.names = "taxonomy")
food <- food[,!colnames(food) == "X.FoodID"]
# collapse at L1
split <- strsplit(rownames(food),";")
# Species
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food_L <- rowsum(food,foodStrings)
food_L_t <- as.data.frame(t(food_L))
cors <- NULL
for (i in colnames(food_L_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(food_L_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "spearman"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stingsAsFactors = F)
colnames(cors) <- c("food", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.character(cors$pvalue)
cors$pvalue <- as.numeric(cors$pvalue)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
cors <- cors[cors$qvalue <= 0.5,]
cors$food <- gsub(".*L2_", "", cors$food)
cors[1:10,]
food_v_axis <- cors[cors$qvalue <=0.25,]
food_v_axis <- sort(food_v_axis$food_vector)
food_v_axis <- cors[cors$qvalue <=0.25,]
food_v_axis <- food_v_axis[order(food_v_axis$food_vector),]
View(food_v_axis)
write.table(tax_v_axis, sep = "\t", quote = F, row.names = F)
tax_v_axis <- tax_v_axis[order(tax_v_axis$food_vector),]
write.table(tax_v_axis, sep = "\t", quote = F, row.names = F)
write.table(tax_v_axis, file = "analysis/diet_vectors_v_tax/tax_v_axis.txt" sep = "\t", quote = F, row.names = F)
write.table(tax_v_axis, file = "analysis/diet_vectors_v_tax/tax_v_axis.txt", sep = "\t", quote = F, row.names = F)
require(rmarkdown)
require(knitr)
require(RColorBrewer)
require(cowplot)
require(tidyverse)
require(stringr)
require(dplyr)
require(ape)
require(vegan)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# set up colors
cols <- brewer.pal(11, "Spectral")
cols2 <- colorRampPalette(cols)
my_cols <- (cols2(10))
tax <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_f.txt", sep = "\t", row.names = 1)
# Drop soylent
tax <- tax[,!colnames(tax) == "MCTs11"]
tax <- tax[,!colnames(tax) == "MCTs12"]
# make sure most prevalent taxa are ordered first
tax <- tax[order(rowMeans(tax), decreasing = T),]
# transpose
tax_t <- as.data.frame(t(tax))
#food beta diversity (unweighted unifrac)
food_beta_un <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/unweighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
food_beta_w <- read.delim("data/processed_food/dhydrt_smry_no_soy_beta/weighted_unifrac_dhydrt.smry.no.soy.txt", sep = "\t", row.names = 1)
#get PCOA vectors to compare with taxonomy
food_vectors_un <- data.frame(pcoa(food_beta_un)$vectors)
food_vectors_w <- data.frame(pcoa(food_beta_w)$vectors)
# limit to top 5 food vectors
food_vectors_un<- food_vectors_un[,1:5]
food_vectors_w <- food_vectors_w[,1:5]
tax_beta <- dist(tax_t)
tax_vectors <- data.frame(pcoa(tax_beta)$vectors)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "pearson", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
tax_v_axis <- cors[cors$qvalue <=0.25,]
tax_v_axis <- tax_v_axis[order(tax_v_axis$food_vector),]
write.table(tax_v_axis, file = "analysis/diet_vectors_v_tax/tax_v_axis.txt", sep = "\t", quote = F, row.names = F)
food <- read.delim("data/processed_food/dhydrt.smry.no.soy.txt", sep = "\t", header = T, comment = "", row.names = "taxonomy")
food <- food[,!colnames(food) == "X.FoodID"]
# collapse at L1
split <- strsplit(rownames(food),";")
# Species
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food_L <- rowsum(food,foodStrings)
food_L_t <- as.data.frame(t(food_L))
cors <- NULL
for (i in colnames(food_L_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(food_L_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "spearman"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stingsAsFactors = F)
colnames(cors) <- c("food", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.character(cors$pvalue)
cors$pvalue <- as.numeric(cors$pvalue)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
cors <- cors[cors$qvalue <= 0.5,]
#cors$food <- gsub(".*L2_", "", cors$food)
food_v_axis <- cors[cors$qvalue <=0.25,]
food_v_axis <- food_v_axis[order(food_v_axis$food_vector),]
write.table(food_v_axis, file = "analysis/diet_vectors_v_tax/food_v_axis.txt", sep = "\t", quote = F, row.names = F)
# Test the first 5 food axis v. all taxa at the species level
cors <- NULL
#update based on which table you want to use, weighted or unweighted
food_vectors <- food_vectors_w
for (i in colnames(tax_t)) {
for (j in colnames(food_vectors)) {
a <- as.numeric(tax_t[,i])
b <- as.numeric(food_vectors[,j])
tmp <- c(i, j, cor(a, b, method = "pearson"), cor.test(a,b, method = "spearman", exact = F)$p.value)
cors <- rbind(cors,tmp)
}
}
cors <- as.data.frame(cors, stringsAsFactors=F)
colnames(cors) <- c("taxa", "food_vector", "correlation", "pvalue")
cors$pvalue <- as.numeric(cors$pvalue) ### why were these factors??! Fixed, now things are better :)
cors$qvalue <- p.adjust(cors$pvalue, method = "fdr")
# nothing significant after correction for multiple tests
# print top 10 most significant
cors <- cors[order(cors$qvalue),]
#cors$taxa <- gsub(".*s__", "", cors$taxa)
tax_v_axis <- cors[cors$qvalue <=0.25,]
tax_v_axis <- tax_v_axis[order(tax_v_axis$food_vector),]
write.table(tax_v_axis, file = "analysis/diet_vectors_v_tax/tax_v_axis.txt", sep = "\t", quote = F, row.names = F)
View(tax_v_axis)
View(tax_v_axis)
