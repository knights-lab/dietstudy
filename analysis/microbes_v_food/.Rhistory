# Note: This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
#
# When you click the **Knit** button a pdf document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You need LaTex to make a pdf.
library(knitr)
library(plyr)
library(tidyr)
library(dplyr)
library(tibble)
library(reshape2)
library(ggplot2)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(vegan)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path='Figs_per_person_networks/', dev = c("png", "pdf"), dpi = 300)
map <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", sep = "\t", header = T, comment = "")
load(file = "analysis/microbes_v_food/perperson.R")
# Need to make the overall list! - TODO
load(file = "analysis/microbe_v_microbe/average_sigs.R")
# set significance level
#alph <- 0.001
for (i in names(mylist)) {
tmp <- as.data.frame(mylist[i])
sigs <- tmp # subset to each person's data
colnames(sigs) <- c("from", "to", "corr", "pval", "fdr_pval", "sig")
#sigs <- sigs[!sigs$from==sigs$to,]    # remove correlations between same taxa (not an issue here)
#sigs <- sigs[sigs$fdr_pval <= alph,] # limit to significant correlations
# clean up naming
sigs$from <- gsub(".*;L2_", "", sigs$from)
sigs$from <- gsub("_", " ", sigs$from)
sigs$to <- gsub(".*;s__", "", sigs$to)
sigs$to <- gsub("_", " ", sigs$to)
# make column for matching with pairs to keep
sigs$map <- paste(sigs$from, sigs$to)
sigs <- sigs[sigs$from %in% overall,]
sigs <- sigs[sigs$to %in% overall,]
# remove the duplicates
df <- sigs[,1:2]
for (j in 1:nrow(df)) {
df[j, ] = sort(df[j,])
}
df = df[!duplicated(df),]
df$map <- paste(df$from, df$to)
sigs <- sigs[sigs$map %in% df$map,]
# Make links table
mylinks <- droplevels(sigs[,1:5])
colnames(mylinks)[3] <- "weight"
mylinks$direction <- ifelse(mylinks$weight < 0, "neg", "pos")
mylinks$weight <- abs(mylinks$weight)
# Make nodes table
load("analysis/microbe_v_microbe/mynodes.R")
library(igraph)
net <- graph_from_data_frame(d = mylinks, vertices = mynodes, directed = F)
# remove text labels
V(net)$label <- NA
# set colors by class
set.seed(42)
cols_n <- length(unique(mynodes$Class))
colrs <- brewer.pal(cols_n, "Dark2")
names(colrs) <- as.character(unique(mynodes$Class)) # must give colors names to match properly
V(net)$color <- colrs[as.character(V(net)$Class)]
# set colors by phylum
# set.seed(42)
# cols_n <- length(unique(mynodes$Phylum))
# cols <- colorRampPalette(brewer.pal(8, "Dark2"))
# colrs <- sample(cols(cols_n))
# names(colrs) <- as.character(unique(mynodes$Phylum)) # must give colors names to match properly
# V(net)$color <- colrs[as.character(V(net)$Phylum)]
# Change node size
V(net)$size <- 7
# Change Edge width
E(net)$width <- -log(E(net)$fdr_pval)
# Change Edge color
e.col <- adjustcolor(c("red", "blue"), alpha = 0.6)
names(e.col) <- c("pos", "neg")
edge.col <- e.col[as.character(E(net)$direction)]
# Set layout
#l <- layout_with_kk(net)
#l <- layout_with_fr(net)
#l <- layout_on_sphere(net)
#l <- layout_in_circle(net)
load("analysis/microbe_v_microbe/layout.R")
# Only show significant relationsihps
cut.off <- 0.05
net <- delete.edges(net, E(net)[fdr_pval>cut.off])
par(bg = "white")
plot(net, layout = l, edge.color = edge.col, edge.curved=.3, main = i)
legend(x = 0.3, y = -1.3, names(colrs), pch = 21, col = "#000000", pt.bg = colrs, pt.cex = 2, cex = 0.8, ncol=2)
}
