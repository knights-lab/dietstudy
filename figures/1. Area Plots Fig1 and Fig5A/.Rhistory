labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# combine into one big plot
plot_grid(micro_plot, food_plot,
ncol = 1,
scale = c(1, 1),
rel_heights = c(1, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# combine into one big plot
plot_grid(micro_plot, food_plot,
ncol = 1,
scale = c(1, 1),
rel_heights = c(1, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# combine into one big plot
plot_grid(micro_plot, food_plot,
ncol = 1,
scale = c(1, 1),
rel_heights = c(1, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# combine into one big plot
plot_grid(micro_plot, food_plot,
ncol = 1,
scale = c(1, 1),
rel_heights = c(1, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# import diet data
food <- read.table("data/processed_food/dhydrt.txt", header = T, sep = "\t", comment = "", row.names = "taxonomy")
food <- food[, !(colnames(food) == "X.FoodID")]
# collapse at level 2
# Summarizing at different levels - makes changes to everything downstream
split <- strsplit(rownames(food),";")             # Split and rejoin on lv7 to get species level
foodStrings <- sapply(split,function(x) paste(x[1:1],collapse=";"))
food<- rowsum(food,foodStrings)              # Collapse by taxonomy name
# sqrt relative abundance
food.n <- sweep(sqrt(food),2,colSums(sqrt(food)),'/')
# drop to top 20 ish foods
food <- food[rowMeans(food.n) > 0.015,]
# how many unique foods?
# length(unique(rownames(food)))
# relative abundance
food <- sweep(sqrt(food), 2, colSums(sqrt(food)), '/')
# sort by highest average relative abundance
food <- food[order(rowMeans(food), decreasing = T),]
# make food ordering factor
food_ord_factor <- as.character(rownames(food))
plot3 <- as.data.frame(t(food))
plot3 <- rownames_to_column(plot3, var = "X.SampleID")
plot3 <- melt(plot3, id = "X.SampleID", variable.name = "Food")
# combine all "<x% abundance" foods into one for plotting
plot3 <- plot3 %>% group_by(X.SampleID, Food) %>% dplyr::summarise(newvalue = sum(value))
# fix labeling for plotting
plot3$Food <- gsub(".*L1_", " ", plot3$Food)
plot3$Food <- gsub("_", " ", plot3$Food)
# merge with map to get day variable
plot3 <- merge(plot3, map, by = "X.SampleID")
# set seed to get nice colors
set.seed(3)
# get right number of colors for plotting
no_cols <- length(unique(plot3$Food))
#colors_food <- sample(cols_food(no_cols))
colors_food <- c("#f29d3d", "#e200f2", "#00a2f2", "#e51f00", "#00cc00", "#eeff00", "#995426", "#e5b409", "#D3D3D3")
# order participants by their microbiome diversity
# reorder by ordered factor and rename
plot3$UserName <- gsub("MCTs", "", plot3$UserName)
ord_factor <- gsub("MCTs", "", ord_factor)
plot3$UserName <- factor(plot3$UserName, levels = ord_factor)
# reorder food levels
food_ord_factor <- gsub(".*L1_", " ", food_ord_factor)
food_ord_factor <- gsub("_", " ", food_ord_factor)
plot3$Food <- as.factor(plot3$Food)
plot3$Food <-factor(plot3$Food, levels = food_ord_factor)
soylents3 <- subset(plot3,UserName == c('11', '12'))
soylents3 <- soylents3[!duplicated(soylents3$UserName),]
# make the plot
food_plot<-ggplot(data = plot3, aes(x=StudyDayNo, y = newvalue, fill=Food)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_food) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 3)) +
#nrow = 5)) + # for full page figure
ncol = 1)) + # for slide figure
ylab("sqrt(Food Group Abundance)")
# xlab("Study Day") +
#ggtitle("Dietary Intake of Subjects by Day - ordered by average dietary similarity")
food_plot
# make the plot
food_plot<-ggplot(data = plot3, aes(x=StudyDayNo, y = newvalue, fill=Food)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_food) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 3)) +
#nrow = 5)) + # for full page figure
nrow = 1)) + # for slide figure
ylab("sqrt(Food Group Abundance)")
food_plot
# this chunck sets up the rmd document
require(rmarkdown)
require(knitr)
require(tidyverse)
require(RColorBrewer)
require(cowplot)
require(reshape2)
require(ggdendro)
require(vegan)
# set the path for root directory
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
# create a directory for the figure and set it's resolution/format
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
#### load the maps for downstream use ####
# full sample map - every possible sample
map <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
# map for each subject
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
# map of just the smaples with taxonomy information after cleaning
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", sep = "\t", header = T, comment = "")
# set up colors
pal <- c("#ff0000", "#ffd940", "#008c4b", "#00138c", "#8c235b", "#ffbfbf", "#8c7723", "#468c75", "#8091ff", "#ff80c4", "#8c3123", "#fff2bf", "#40fff2", "#69698c", "#ff0044", "#ff9180", "#e5ff80", "#bffbff", "#5940ff", "#8c696e", "#8c7369", "#858c69", "#40d9ff", "#c480ff", "#ff8c40", "#4b8c00", "#23698c", "#69238c", "#8c4b00", "#bfffbf", "#004b8c", "#eabfff", "#ffc480", "#40ff59", "#80c4ff", "#ff40f2")
pal1 <- c("#ff0015", "#0073ff", "#adffcb", "#8c0000", "#ffadb4", "#add2ff", "#5f8c70", "#8c5f5f", "#bb00ff", "#5f748c", "#d0ff00", "#67008c", "#00ff5e", "#738c00", "#e9adff", "#008c33", "#f0ffad")
pal2 <- c("#8c5f63", "#ff0015", "#e9adff", "#003f8c", "#0073ff", "#adffcb", "#738c00", "#d0ff00", "#8c000c", "#67008c", "#bb00ff", "#add2ff", "#008c33", "#00ff5e", "#f0ffad", "#ffadad")
pal3 <- c("#ff4066", "#8091ff", "#c3ffbf", "#7a5c62", "#bfc8ff", "#7a771f", "#df40ff", "#40ffec", "#fffb80", "#703d7a", "#3d7a74", "#ff0000", "#f4bfff", "#bffff9", "#7a1f1f", "#00107a", "#11ff00", "#ffbfbf", "#4059ff", "#417a3d")
#cols_micro <- colorRampPalette(brewer.pal(12, "Set3"))
#cols_func <- colorRampPalette(brewer.pal(8, "Set2"))
#cols_food <- colorRampPalette(brewer.pal(8, "Dark2"))
# import average microbime per person for clustering
microbes <- read.delim("data/processed_UN_tax/UN_taxonomy_norm_s.txt", row = 1)
# create normalized sqrt relative abundance
# this is what we display in the figure, so we cluster using these values
microbes.sq <- sweep(sqrt(microbes), 2, colSums(sqrt(microbes)), "/")
# create distance matrix for clustering
# should update this to what ever method I end up using in the paper (bray for clr, but should use a tree method with relative abundance data)
mydist <- vegdist(t(microbes.sq), method = "bray")
myclust <- hclust(mydist, method = "average")
order <- myclust$order
microbes <- microbes[,order]
ord_factor <- as.character(colnames(microbes))
# save the sim.order - might not need to do this
#save(sim.order, file = "data/order_by_similaritiy.RData")
# create dendrogram of clustering
dend <- as.dendrogram(myclust)
# munging for plotting
ddata <- dendro_data(dend, type = "rectangle")
labs <- label(ddata)
# change class to prevent warning when joining
labs$label<- as.character(labs$label)
map_username$UserName <- as.character(map_username$UserName)
# add map information for plotting
labs <- inner_join(labs, map_username, by = c("label"="UserName" ))
labs$label <- gsub("MCTs", "", labs$label)
# plot dendrogram
dend_plot <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_label(data=labs, aes(label=label, x =x, y=0, hjust = 0.5, vjust =1, fill = labs$Supplement), size = 3) +
ylim(-0.25, 0.5) +
theme_dendro() +
theme(legend.position = c(0.5,0.2),
legend.direction = "horizontal",
legend.title = element_blank())
dend_plot
# import microbiome data
taxa <- read.table("data/processed_tax/taxonomy_norm_s.txt", header = T, row.names = 1, sep = "\t", comment = "")
# collapse at level 3
# Summarizing at different levels - makes changes to everything downstream
split <- strsplit(rownames(taxa),";")             # Split and rejoin on lv7 to get species level
taxaStrings <- sapply(split,function(x) paste(x[1:7],collapse=";"))
taxa<- rowsum(taxa,taxaStrings)              # Collapse by taxonomy name
# for plotting, limit to top ~20 bugs
taxa = taxa[rowMeans(taxa) >= 0.007,]
#readjust for plotting
taxa = sweep(sqrt(taxa),2,colSums(sqrt(taxa)),'/')
# convert to relative abundance
#taxa <- sweep(taxa, 2, colSums(taxa), "/")
# sort by highest average relative abundance
taxa <- taxa[order(rowMeans(taxa), decreasing = T),]
# make tax ordering factor
tax_ord_factor <- as.character(rownames(taxa))
plot <- as.data.frame(t(taxa))
plot <- rownames_to_column(plot, var = "X.SampleID")
plot <- melt(plot, id = "X.SampleID", variable.name = "Species")
# label low abundance foods as "<x% abundance"
# plot$Species <- as.character(plot$Species) #convert to character
# plot$Species[plot$value < 0.04] <- "Other" #rename genera with < 2.5% abundance
# combine all "<x% abundance" foods into one for plotting
plot <- plot %>% group_by(X.SampleID, Species) %>% dplyr::summarise(newvalue = sum(value))
# fix labeling for plotting
plot$Species <- gsub("?.*s__", "", plot$Species)
plot$Species <- gsub("?.*g__", "Genus ", plot$Species)
plot$Species <- gsub("?.*o__", "Order ", plot$Species)
plot$Species <- gsub(";NA", "", plot$Species)
plot$Species <- gsub("\\[", "", plot$Species)
plot$Species <- gsub("\\]", "", plot$Species)
# merge with map to get day variable
plot <- merge(plot, map, by = "X.SampleID")
# random seed for colors
#set.seed(100)
# get right number of colors for plotting
no_cols <- length(unique(plot$Species))
#colors_micro <- sample(cols_micro(no_cols))
#colors_micro <- sample(pal, no_cols)
colors_micro <-pal[1:no_cols]
# order participants by their microbiome diversity
# reorder by ordered factor
plot$UserName <- gsub("MCTs", "", plot$UserName)
ord_factor <- gsub("MCTs", "", ord_factor)
plot$UserName <- factor(plot$UserName, levels = ord_factor)
# reorder food species and clean up naming
tax_ord_factor <- gsub("?.*s__", "", tax_ord_factor)
tax_ord_factor <- gsub("?.*g__", "Genus ", tax_ord_factor)
tax_ord_factor <- gsub("?.*o__", "Order ", tax_ord_factor)
tax_ord_factor <- gsub(";NA", "", tax_ord_factor)
tax_ord_factor <- gsub("\\[", "", tax_ord_factor)
tax_ord_factor <- gsub("\\]", "", tax_ord_factor)
plot$Species <- as.factor(plot$Species)
plot$Species <-factor(plot$Species, levels = tax_ord_factor)
# soylents <- subset(plot,UserName == c('11', '12'))
# soylents <- soylents[!duplicated(soylents$UserName),]
#
# # make stacked bar plot
# micro_plot <- ggplot() +
#   geom_rect(data = soylents, aes(fill = UserName),xmin = -Inf,xmax = Inf,ymin = -Inf,ymax = Inf, alpha =0.3, fill = "grey") + # shade soylent
#   geom_bar(data = plot, aes(x = StudyDayNo, y = newvalue, fill= Species), stat = "identity") +
#   facet_grid(.~UserName) +
#   scale_fill_manual(values = colors_micro) +
#   scale_x_discrete(drop = FALSE) +
#   theme_classic() +
#   theme(strip.text.x = element_text(angle = 0, size = 4, face = "italic"),
#         axis.text.x = element_text(angle = 45, hjust = 1),
#         axis.text.y = element_text(size = 3),
#         axis.title = element_text(size = 7),
#         plot.title = element_text(hjust = 0.5),
#         axis.title.x = element_blank(),
#         strip.background = element_rect(color = "grey"),
#         legend.position = "bottom",
#         legend.text = element_text(size = 7),
#         legend.title = element_blank()) +
#   guides(fill = guide_legend(reverse = FALSE,
#                              keywidth = 0.5,
#                              keyheight = 0.5,
#                              #ncol = 5)) +
#                              nrow = 2)) +
#   ylab("sqrt(Taxonomy Abundance)\n")
#   #ggtitle("Microbiome Composition of Subjects by Day - ordered by average microbiome similarity")
#
micro_plot <- ggplot(data = plot, aes(x=StudyDayNo, y = newvalue, fill=Species)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_micro) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_text(angle = 0, size = 6, face = "italic"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_rect(color = "grey"),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 5)) +
#nrow = 5)) + # for full page
nrow = 3)) + # for slide
ylab("sqrt(Taxonomy Abundance)\n")
micro_plot
path_map <- read.table("raw/functional/Kegg_ID_Map_plus.txt", sep = "\t", header = T, comment = "")
# import microbiome data for function
modules <- read.table("data/shogun_results_cleaned/shogun_no_dropouts/modules.txt", header = T, row.names = 1, sep = "\t", comment = "")
# for plotting, limit to top ~20 modules
modules = modules[rowMeans(modules) >= 80000,]
#readjust for plotting
modules = sweep(sqrt(modules),2,colSums(sqrt(modules)),'/')
# sort by highest average relative abundance
modules <- modules[order(rowMeans(modules), decreasing = T),]
# make tax ordering factor
mod_ord_factor <- as.character(rownames(modules))
plot2 <- as.data.frame(t(modules))
plot2 <- rownames_to_column(plot2, var = "X.SampleID")
plot2 <- melt(plot2, id = "X.SampleID", variable.name = "Modules")
# combine all "<x% abundance" foods into one for ploting
plot2 <- plot2 %>% group_by(X.SampleID, Modules) %>% dplyr::summarise(newvalue = sum(value))
# merge with map to get day variable
plot2 <- merge(plot2, map, by = "X.SampleID")
set.seed(1)
# get right number of colors for plotting
no_cols <- length(unique(plot2$Modules))
#colors_func <- sample(cols_func(no_cols))
colors_func <- sample(pal, no_cols)
# order participants by their microbiome diversity
# reorder by ordered factor
plot2$UserName <- gsub("MCTs", "", plot2$UserName)
plot2$UserName <- factor(plot2$UserName, levels = ord_factor)
# reorder modules
plot2$Modules <- as.factor(plot2$Modules)
plot2$Modules <-factor(plot2$Modules, levels = mod_ord_factor)
# plot2 <- merge(plot2, path_map, by.x = "Modules", by.y = "Shogun_ID")
# plot2$KEGG_Label <- gsub(" \\[.*$", "", plot2$KEGG_Label)
# plot2$KEGG_Label <- gsub("M..... ", "", plot2$KEGG_Label)
soylents2 <- subset(plot2,UserName == c('11', '12'))
soylents2 <- soylents2[!duplicated(soylents2$UserName),]
# make the plot2
func_plot <- ggplot(data = plot2, aes(x=StudyDayNo, y = newvalue, fill=Modules)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_func) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 12)) +
nrow = 5)) +
ylab("sqrt(Module Abundance)\n")
#xlab("Study Day") +
#ggtitle("Microbiome Composition of Subjects by Day - ordered by average microbiome similarity")
func_plot
# import diet data
food <- read.table("data/processed_food/dhydrt.txt", header = T, sep = "\t", comment = "", row.names = "taxonomy")
food <- food[, !(colnames(food) == "X.FoodID")]
# collapse at level 2
# Summarizing at different levels - makes changes to everything downstream
split <- strsplit(rownames(food),";")             # Split and rejoin on lv7 to get species level
foodStrings <- sapply(split,function(x) paste(x[1:1],collapse=";"))
food<- rowsum(food,foodStrings)              # Collapse by taxonomy name
# sqrt relative abundance
food.n <- sweep(sqrt(food),2,colSums(sqrt(food)),'/')
# drop to top 20 ish foods
food <- food[rowMeans(food.n) > 0.015,]
# how many unique foods?
# length(unique(rownames(food)))
# relative abundance
food <- sweep(sqrt(food), 2, colSums(sqrt(food)), '/')
# sort by highest average relative abundance
food <- food[order(rowMeans(food), decreasing = T),]
# make food ordering factor
food_ord_factor <- as.character(rownames(food))
plot3 <- as.data.frame(t(food))
plot3 <- rownames_to_column(plot3, var = "X.SampleID")
plot3 <- melt(plot3, id = "X.SampleID", variable.name = "Food")
# combine all "<x% abundance" foods into one for plotting
plot3 <- plot3 %>% group_by(X.SampleID, Food) %>% dplyr::summarise(newvalue = sum(value))
# fix labeling for plotting
plot3$Food <- gsub(".*L1_", " ", plot3$Food)
plot3$Food <- gsub("_", " ", plot3$Food)
# merge with map to get day variable
plot3 <- merge(plot3, map, by = "X.SampleID")
# set seed to get nice colors
set.seed(3)
# get right number of colors for plotting
no_cols <- length(unique(plot3$Food))
#colors_food <- sample(cols_food(no_cols))
colors_food <- c("#f29d3d", "#e200f2", "#00a2f2", "#e51f00", "#00cc00", "#eeff00", "#995426", "#e5b409", "#D3D3D3")
# order participants by their microbiome diversity
# reorder by ordered factor and rename
plot3$UserName <- gsub("MCTs", "", plot3$UserName)
ord_factor <- gsub("MCTs", "", ord_factor)
plot3$UserName <- factor(plot3$UserName, levels = ord_factor)
# reorder food levels
food_ord_factor <- gsub(".*L1_", " ", food_ord_factor)
food_ord_factor <- gsub("_", " ", food_ord_factor)
plot3$Food <- as.factor(plot3$Food)
plot3$Food <-factor(plot3$Food, levels = food_ord_factor)
soylents3 <- subset(plot3,UserName == c('11', '12'))
soylents3 <- soylents3[!duplicated(soylents3$UserName),]
# make the plot
food_plot<-ggplot(data = plot3, aes(x=StudyDayNo, y = newvalue, fill=Food)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values = colors_food) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
#ncol = 3)) +
#nrow = 5)) + # for full page figure
nrow = 1)) + # for slide figure
ylab("sqrt(Food Group Abundance)")
# xlab("Study Day") +
#ggtitle("Dietary Intake of Subjects by Day - ordered by average dietary similarity")
food_plot
# load nutrition intake for each person
nutr <- read.table("data/processed_nutr/nutr_totals.txt", header = T, sep = "\t", comment = "")
plot4 <- nutr %>% select(X.SampleID, KCAL, PROT, TFAT, CARB, UserName, RecordDayNo)
plot4$PROT <- plot4$PROT*4/plot4$KCAL
plot4$TFAT <- plot4$TFAT*9/plot4$KCAL
plot4$CARB <- plot4$CARB*4/plot4$KCAL
plot4 <- melt(plot4, id.vars = c("X.SampleID", "UserName", "KCAL", "RecordDayNo"),
measure.vars = c("PROT", "TFAT", "CARB"),
variable.name = "Macro", value.name = "PCT")
plot4$y <- plot4$KCAL*plot4$PCT
# order participants by their microbiome diversity
# reorder by ordered factor and rename
plot4$UserName <- gsub("MCTs", "", plot4$UserName)
ord_factor <- gsub("MCTs", "", ord_factor)
plot4$UserName <- factor(plot4$UserName, levels = ord_factor)
soylents4 <- subset(plot4,UserName == c('11', '12'))
soylents4 <- soylents4[!duplicated(soylents4$UserName),]
# plot kcal filled with % protein, fat, and carb
nutr_plot <- ggplot(data = plot4, aes(x = RecordDayNo, y = y, fill = Macro)) +
geom_area(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
scale_fill_manual(values= c("#ff0000", "#008aec", "#ffde00"),
labels = c("Protein", "Total Fat", "Carbohydrate")) +
scale_x_discrete(drop = FALSE) +
theme_classic() +
theme(strip.text.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 7),
axis.title = element_text(size = 7),
plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
legend.text = element_text(size = 7),
legend.title = element_blank(),
panel.spacing.x=unit(0.05, "lines")) +
guides(fill = guide_legend(reverse = FALSE,
keywidth = 0.5,
keyheight = 0.5,
nrow = 5)) +
ylab("Kilocalories")
nutr_plot
# combine into one big plot
plot_grid(micro_plot, func_plot, food_plot, nutr_plot,
ncol = 1,
scale = c(1, 1, 1, 1),
rel_heights = c(1, 1, 1, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
# combine into one big plot
plot_grid(micro_plot, food_plot,
ncol = 1,
scale = c(1, 1),
rel_heights = c(1.2, 1),
labels = "AUTO")
# note fig.width of 7 will fit nicely on one page of a journal article.
# this figure does look nicer if it's wider though
# make this figure so it has a clear background - see if its possible to add the shaded region in cowplot or ggplot directly.
